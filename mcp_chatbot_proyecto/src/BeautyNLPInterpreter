import re
from typing import Dict, Optional

class BeautyNLPInterpreter:
    def __init__(self):
        # Diccionario de intenciones -> comandos base
        self.intents = {
            "crear perfil": "/beauty create_profile",
            "ver perfil": "/beauty profile {user_id}",
            "listar perfiles": "/beauty list_profiles",
            "actualizar perfil": "/beauty update_profile {user_id}",
            "eliminar perfil": "/beauty delete_profile {user_id}",
            "historial": "/beauty history {user_id}",
            "estadísticas": "/beauty stats {user_id}",
            "exportar": "/beauty export {user_id}",
            "paleta ropa": "/palette ropa {user_id} {evento}",
            "paleta maquillaje": "/palette maquillaje {user_id} {evento}",
            "paleta accesorios": "/palette accesorios {user_id} {evento}",
            "paleta rápida": "/palette quick {tipo} {evento}"
        }

        # Eventos conocidos
        self.eventos = ["casual", "formal", "fiesta", "trabajo", "cita", "deporte", "viaje"]

    def interpret(self, text: str) -> Optional[str]:
        """Convierte frase en lenguaje natural a un comando interno"""
        text = text.lower()

        # --- Perfil ---
        if "crear perfil" in text:
            return self.intents["crear perfil"]

        if "ver perfil" in text:
            user_id = self._extraer_usuario(text)
            return self.intents["ver perfil"].format(user_id=user_id)

        if "historial" in text:
            user_id = self._extraer_usuario(text)
            return self.intents["historial"].format(user_id=user_id)

        # --- Paletas ---
        if "paleta" in text or "colores" in text:
            user_id = self._extraer_usuario(text)
            evento = self._extraer_evento(text)

            if "maquillaje" in text:
                return self.intents["paleta maquillaje"].format(user_id=user_id, evento=evento)
            elif "ropa" in text:
                return self.intents["paleta ropa"].format(user_id=user_id, evento=evento)
            elif "accesorio" in text:
                return self.intents["paleta accesorios"].format(user_id=user_id, evento=evento)

        return None  # No entendió la intención

    def _extraer_usuario(self, text: str) -> str:
        """Busca user_id en el texto (ej: maria_123)"""
        match = re.search(r"\b[a-zA-Z0-9_]+\b", text)
        return match.group(0) if match else "default_user"

    def _extraer_evento(self, text: str) -> str:
        """Busca un evento conocido en el texto"""
        for evento in self.eventos:
            if evento in text:
                return evento
        return "casual"


if __name__ == "__main__":
    interpreter = BeautyNLPInterpreter()

    frases = [
        "Dame una paleta de maquillaje para una fiesta, soy maria_123",
        "Quiero crear mi perfil de belleza",
        "Muéstrame el historial de paletas de juan_77",
        "Necesito colores de ropa para un evento formal, usuario ana22"
    ]

    for f in frases:
        comando = interpreter.interpret(f)
        print(f"> {f}\n  → {comando}\n")
